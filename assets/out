#!/bin/sh

# Resource Impl: http://concourse.ci/implementing-resources.html#out:-update-a-resource.
set -e

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source=$1

if [ -z "$source" ]; then
  echo "usage: $0 </full/path/to/dir>"
  exit 1
fi
#######################################

# parse incoming config data
payload=`cat`

# source config
bucket=$(echo "$payload" | jq -r '.source.bucket')
addressing_style=$(echo "$payload" | jq -r '.source.addressing_style // "path"')
prefix=$(echo "$payload" | jq -r '.source.prefix // "" ')
url=$(echo "$payload" | jq -r '.source.access_url // "" ')
version_file=$(echo "$payload" | jq -r '.source.version_file // "" ')

# params config
path=$(echo "$payload" | jq -r '.params.path // "" ')
change_dir_to=$(echo "$payload" | jq -r '.params.change_dir_to // "." ')
options=$(echo "$payload" | jq -r '.params.options // [] | join(" ")')

# export for `aws` cli
AWS_ACCESS_KEY_ID=$(echo "$payload" | jq -r '.source.access_key_id // empty')
AWS_SECRET_ACCESS_KEY=$(echo "$payload" | jq -r '.source.secret_access_key // empty')
AWS_DEFAULT_REGION=$(echo "$payload" | jq -r '.source.region // empty')
AWS_ENDPOINT=$(echo "$payload" | jq -r '.source.endpoint // empty')

# Due to precedence rules, must be unset to support AWS IAM Roles.
if [ -n "$AWS_ACCESS_KEY_ID" ] && [ -n "$AWS_SECRET_ACCESS_KEY" ]; then
  export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
  export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
fi

# Export AWS_DEFAULT_REGION if set
[ -n "$AWS_DEFAULT_REGION" ] && export AWS_DEFAULT_REGION

# get version from version_file
cd ${source}/${change_dir_to}

aws configure set default.s3.addressing_style $addressing_style

echo "Uploading to S3..."
eval aws s3 sync . "s3://$bucket/$prefix/$path" --endpoint-url $AWS_ENDPOINT $options --include "${version_file}"
echo "...done."

source "$(dirname $0)/emit.sh" >&3
