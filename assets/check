#!/bin/sh

# http://concourse.ci/implementing-resources.html#resource-check

set -e

# parse incoming config data
payload=`cat`

# source config
bucket=$(echo "$payload" | jq -r '.source.bucket')
addressing_style=$(echo "$payload" | jq -r '.source.addressing_style // "path"')
prefix=$(echo "$payload" | jq -r '.source.prefix // "" ')
version_file=$(echo "$payload" | jq -r '.source.version_file // "" ')

# export for `aws` cli
AWS_ACCESS_KEY_ID=$(echo "$payload" | jq -r '.source.access_key_id // empty')
AWS_SECRET_ACCESS_KEY=$(echo "$payload" | jq -r '.source.secret_access_key // empty')
AWS_DEFAULT_REGION=$(echo "$payload" | jq -r '.source.region // empty')
AWS_ENDPOINT=$(echo "$payload" | jq -r '.source.endpoint // empty')

# Due to precedence rules, must be unset to support AWS IAM Roles.
if [ -n "$AWS_ACCESS_KEY_ID" ] && [ -n "$AWS_SECRET_ACCESS_KEY" ]; then
  export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
  export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
fi

# Export AWS_DEFAULT_REGION if set
[ -n "$AWS_DEFAULT_REGION" ] && export AWS_DEFAULT_REGION

aws configure set default.s3.addressing_style $addressing_style

# Consider the most recent LastModified timestamp as the most recent version.
files=$(aws s3api list-objects --bucket $bucket --prefix "$prefix" --query 'Contents[?contains(Key, `.buildinfo`)].{path: Key}' --endpoint-url $AWS_ENDPOINT)

echo $files | sed "s/\/${version_file}//g"
